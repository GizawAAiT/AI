from cProfile import label
import matplotlib.pyplot as plt
import numpy as np

labels = ['Si', 'Ar', 'Ri', 'Ze', 'Or','Ne', 'La', 'Cr', 'Ur', 'Bu','Pi', 'Fa', 'Dr', 'Gi', 'Hi','Ef', 'Ti', 'Va', 'Me', 'Lu']

# # time information.
# bfs = [
    
#         1.0159768556293689e-05,
#         0.00014627419020000256,
#         0.0005764898500944439,
#         0.0010857224464416505,
#         0.0018414265231082314
        
#         ]
# dfs =[
    
#         1.2890916121633429e-05,
#         0.00012242103877820466,
#         0.0005380053269235712,
#         0.007266732266074733,
#         0.001984596879858719
        
#         ]
# dijkstra = [
    
#         0.0001038996796858938,
#         0.0008369539913378264,
#         0.0027048468589782717,
#         0.006897970249778346,
#         0.01451620616410907
                
#         ]
# a_star = [
    
#         0.00014167835837916324,
#         0.0017459888207285027,
#         0.005125548337635241,
#         0.012278417537086889,
#         0.024595910624453897
        
#         ]



# length information.



# bfs = [
    
#         11.0,
#         86.21052631578948,
#         288.7894736842105,
#         681.8947368421053,
#         1328.6842105263158
        
#         ]

# dfs =[
    
#         11.321052631578947,
#         90.77368421052631,
#         294.7894736842105,
#         712.9973684210527,
#         1467.9605263157894
        
#         ]

# dijkstra = [
    
#         4.936842105263158,
#         17.96578947368421,
#         42.10263157894737,
#         80.55,
#         122.78947368421052
                
#         ]

# a_star = [
    
#         4.94736842105263,
#         20.74736842105263,
#         50.43157894736842,
#         92.88421052631578,
#         146.00263157894736
        
#         ]







# # time information.



# bfs = [
    
#         1.0159768556293689e-05,
#         0.00014627419020000256,
#         0.0005764898500944439,
#         0.0010857224464416505,
#         0.0018414265231082314
        
#         ]
# dfs =[
    
#         1.2890916121633429e-05,
#         0.00012242103877820466,
#         0.0005380053269235712,
#         0.007266732266074733,
#         0.001984596879858719
        
#         ]
# dijkstra = [
    
#         0.0001038996796858938,
#         0.0008369539913378264,
#         0.0027048468589782717,
#         0.006897970249778346,
#         0.01451620616410907
                
#         ]
# a_star = [
    
#         0.00014167835837916324,
#         0.0017459888207285027,
#         0.005125548337635241,
#         0.012278417537086889,
#         0.024595910624453897
        
#         ]





# centrality information.



degree = [
    
        0.21052631578947367, 
        0.15789473684210525,
        0.15789473684210525,
        0.10526315789473684,
        0.10526315789473684,
        0.05263157894736842,
        0.10526315789473684,
        0.15789473684210525,
        0.15789473684210525,
        0.00146412884333821,
        0.15789473684210525,
        0.10526315789473684,
        0.10526315789473684,
        0.05263157894736842, 
        0.10526315789473684,
        0.05263157894736842,
        0.10526315789473684, 
        0.10526315789473684, 
        0.10526315789473684,
        0.10526315789473684
            
        ]

closeness =[
    
        0.00911900288112238508,
        0.00608219059566552753,
        0.00914347202295552368,
        0.00914347202295552368,
        0.00707444849339759414, 
        0.00904347229213380314, 
        0.00905565971408483712,
        0.00712032932235592148, 
        0.0091166216547999018,
        0.00914641288433382138, 
        0.00915963703579230382, 
        0.00812360939431396785, 
        0.00908819979574784143,
        0.00809765123091946343,
        0.00908036545131545554, 
        0.0090595648630008151,
        0.00906155441085949396,
        0.00907322336981655619, 
        0.0090744893558630964,
        0.00806629680030705886 

        ]

betweenness = [
        
        0.30994152046783624,
        0.2046783625730994,
        0.3216374269005848,
        0.3216374269005848,
        0.0007444849339759414 ,
        0.0,
        0.10526315789473684,
        0.19883040935672514,
        0.4444444444444444,
        0.5263157894736842,
        0.4678362573099415,
        0.0,
        0.14619883040935672,
        0.0,
        0.10526315789473684,
        0.0,
        0.06432748538011696,
        0.19883040935672514,
        0.09941520467836257,
        0.05263157894736842

                
        ]




x = np.arange(len(labels))  # the label locations
width = 0.6  # the width of the bars

fig, ax = plt.subplots()



rects1 = ax.bar(x - width/3, degree, width/4,label="@degree")
rects2 = ax.bar(x,closeness,width/4,label="@closeness" )
rects4 = ax.bar(x + width/3, betweenness, width/4,label="@betweenness")

ax.set_xlabel('Nodes')
ax.set_xticks(x, labels)

                #  time
                
# ax.set_ylabel('Average Solution Time(sec).')
# ax.set_title('Solution Time')
# ax.legend()
# fig.tight_layout()
# plt.show()




               # length

ax.set_ylabel('Centrality value. ')
ax.set_title('Measure of centrality by using Dijkstra Algorism')
ax.legend()

fig.tight_layout()

plt.show()
